---
import { Image } from "astro:assets"
import myImage from "../assets/me.jpg"

const navElements = [
    {
        id: 1,
        name: "Home",
        path: "/",
    },
    {
        id: 2,
        name: "Blogs",
        path: "/posts",
    },
    {
        id: 3,
        name: "About",
        path: "/about",
    }
];
---

<header
    class="p-4 sticky top-0 backdrop-filter backdrop-blur-sm bg-opacity-30 z-10"
>
    <section class="flex justify-between items-center">
        <a href="/" class="flex items-center">
            <Image
                src={myImage}
                alt="Dinith Kumudika (icon)"
                class="w-8 h-8 rounded-full"
            />
            <p class="text-white pl-2">Dinith Kumudika</p>
        </a>
        <nav class="pointer-events-auto hidden sm:block">
            <ul
                class="flex rounded-full px-5 text-md font-medium shadow shadow-zinc-900/5 text-zinc-900 dark:text-zinc-300 ring-1 ring-zinc-900/5 dark:ring-zinc-700/90 bg-zinc-50 dark:bg-black"
            >
                {
                    navElements.map((element) => (
                        <li class="relative inline-flex px-3 py-2 transition navElement">
                            <a href={element.path}>{element.name}</a>
                        </li>
                    ))
                }
        </nav>
        <div class="flex sm:block">
            <button
                type="button"
                class="group flex sm:hidden mr-2 items-center rounded-full px-3 py-2 shadow shadow-zinc-900/5 text-zinc-900 dark:text-zinc-300 ring-1 ring-zinc-900/5 dark:ring-zinc-700/90 bg-zinc-50 dark:bg-black"
                id="navigationBtn"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                    stroke-width="2"
                    class=" stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-300"
                    aria-hidden="true"
                >
                    <line x1="4" x2="20" y1="12" y2="12"></line>
                    <line x1="4" x2="20" y1="6" y2="6"></line>
                    <line x1="4" x2="20" y1="18" y2="18"></line>
                </svg>
            </button>
            <section
                class="hidden fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white dark:bg-zinc-900 p-8 ring-1 ring-zinc-900/5 dark:ring-zinc-700 opacity-100 scale-100 transition-all duration-75"
                id="mobileNav">
                <section class="flex flex-row-reverse items-center justify-between">
                    <button class="-m-1 p-1" id="closeNavBtn">
                        <svg
                            class="h-6 w-6 text-zinc-500 dark:text-zinc-300"
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 24 24"
                            aria-hidden="true"
                            >
                            <path
                                fill="none"
                                stroke="currentColor"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="1.5"
                                d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5"
                            >
                            </path>
                        </svg>
                    </button>
                </section>
                <nav class="mt-6">
                    <ul
                        class="-my-2 flex flex-col divide-zinc-100 dark:divide-zinc-100/5 text-base text-zinc-900 dark:text-zinc-300"
                    >
                        {
                            navElements.map((el) => (
                                <li class="relative inline-flex px-3 py-2 transition navElement">
                                    <a href={el.path}>
                                        {el.name}
                                    </a>
                                </li>
                            ))
                        }
                    </ul>
                </nav>
            </section>
            <button
                type="button"
                class="group flex rounded-full px-3 py-2 shadow shadow-zinc-900/5 text-zinc-900 dark:text-zinc-300 ring-1 ring-zinc-900/5 dark:ring-zinc-700/90 bg-zinc-50 dark:bg-black"
                id="themeBtn"
                >
                <svg
                    class="inline-flex dark:hidden h-6 w-6 fill-zinc-100 stroke-zinc-500 group-hover:fill-zinc-300 group-hover:stroke-zinc-700"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                    >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="1.5"
                        d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
                    >
                    </path>
                </svg>
                <svg
                    class="hidden dark:inline-flex h-6 w-6 fill-zinc-700 stroke-zinc-500"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                    >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="1.5"
                        d="M17.25 16.22a6.937 6.937 0 0 1-9.47-9.47 7.451 7.451 0 1 0 9.47 9.47ZM12.75 7C17 7 17 2.75 17 2.75S17 7 21.25 7C17 7 17 11.25 17 11.25S17 7 12.75 7Z"
                    >
                    </path>
                </svg>
            </button>
        </div>
    </section>
</header>

<script>
    const mobileNav = document.querySelector("#mobileNav");
    const navigationBtn = document.querySelector("#navigationBtn");
    const closeNavBtn = document.querySelector("#closeNavBtn");
    const themeBtn = document.querySelector("#themeBtn");

    const pathname = window.location.pathname;

    const navElements = document.querySelectorAll(".navElement");
    navElements.forEach((el) => {
        el = el.querySelector("a") as HTMLElement;
        if (el.getAttribute("href") === pathname || `${el.getAttribute("href")}/` === pathname) {
            el.classList.add("nav-active");
        }
    });

    document.addEventListener("click", (e) => {
        if (
            e.target !== mobileNav &&
            e.target !== navigationBtn &&
            !mobileNav?.contains(e.target as Node)
        ) {
            mobileNav?.classList.add("hidden");
        }
    });

    closeNavBtn?.addEventListener("click", () => {
        mobileNav?.classList.add("hidden");
    });

    navigationBtn?.addEventListener("click", () => {
        mobileNav?.classList.remove("hidden");
    });

    themeBtn?.addEventListener("click", () => {
        document.documentElement.classList.toggle("dark");
        const t = document.documentElement.classList.contains("dark")
            ? "dark"
            : "light";
        localStorage.setItem("theme", t);
        if (t === "dark") {
            document.body.classList.add("darkDots");
        } else {
            document.body.classList.remove("darkDots");
        }
    });
</script>

<style>
    .navElement a{
        transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    }
	.navElement a:is(:hover, :focus-within) {
		color: rgb(var(--accent-light));
	}

    .nav-active 
    {
        color: rgb(var(--accent-light));
    }
</style>